const emptySheet = 'JVBERi0xLjcNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhlcykgL1N0cnVjdFRyZWVSb290IDEwIDAgUi9NYXJrSW5mbzw8L01hcmtlZCB0cnVlPj4vTWV0YWRhdGEgMjEgMCBSL1ZpZXdlclByZWZlcmVuY2VzIDIyIDAgUj4 + DQplbmRvYmoNCjIgMCBvYmoNCjw8L1R5cGUvUGFnZXMvQ291bnQgMS9LaWRzWyAzIDAgUl0gPj4NCmVuZG9iag0KMyAwIG9iag0KPDwvVHlwZS9QYWdlL1BhcmVudCAyIDAgUi9SZXNvdXJjZXM8PC9Gb250PDwvRjEgNSAwIFI + Pi9FeHRHU3RhdGU8PC9HUzcgNyAwIFIvR1M4IDggMCBSPj4vUHJvY1NldFsvUERGL1RleHQvSW1hZ2VCL0ltYWdlQy9JbWFnZUldID4 + L01lZGlhQm94WyAwIDAgNjEyIDc5Ml0gL0NvbnRlbnRzIDQgMCBSL0dyb3VwPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeS9DUy9EZXZpY2VSR0I + Pi9UYWJzL1MvU3RydWN0UGFyZW50cyAwPj4NCmVuZG9iag0KNCAwIG9iag0KPDwvRmlsdGVyL0ZsYXRlRGVjb2RlL0xlbmd0aCAxNDY + Pg0Kc3RyZWFtDQp4nC2MzQqCUBSE9wfOO8xSg + 69R6qrIC78SYpchIJBtHBhrpLK94dO0SwGZuZjYNvnMCNNbVMcSjh7GuYJwbism0uYZcjLAi8mZ9xXiURw2Kn7JMJ7ZOpXmJnyjsnuBSLGbdDdmUQ5B0G8NaKVF2e8Lg/l6tZjWvQT0y/F / 1QzXQOEN3RHpkofz0yomgIfgyshtQ0KZW5kc3RyZWFtDQplbmRvYmoNCjUgMCBvYmoNCjw8L1R5cGUvRm9udC9TdWJ0eXBlL1RydWVUeXBlL05hbWUvRjEvQmFzZUZvbnQvQkNERUVFK0NhbGlicmkvRW5jb2RpbmcvV2luQW5zaUVuY29kaW5nL0ZvbnREZXNjcmlwdG9yIDYgMCBSL0ZpcnN0Q2hhciAzMi9MYXN0Q2hhciAzMi9XaWR0aHMgMTkgMCBSPj4NCmVuZG9iag0KNiAwIG9iag0KPDwvVHlwZS9Gb250RGVzY3JpcHRvci9Gb250TmFtZS9CQ0RFRUUrQ2FsaWJyaS9GbGFncyAzMi9JdGFsaWNBbmdsZSAwL0FzY2VudCA3NTAvRGVzY2VudCAtMjUwL0NhcEhlaWdodCA3NTAvQXZnV2lkdGggNTIxL01heFdpZHRoIDE3NDMvRm9udFdlaWdodCA0MDAvWEhlaWdodCAyNTAvU3RlbVYgNTIvRm9udEJCb3hbIC01MDMgLTI1MCAxMjQwIDc1MF0gL0ZvbnRGaWxlMiAyMCAwIFI + Pg0KZW5kb2JqDQo3IDAgb2JqDQo8PC9UeXBlL0V4dEdTdGF0ZS9CTS9Ob3JtYWwvY2EgMT4 + DQplbmRvYmoNCjggMCBvYmoNCjw8L1R5cGUvRXh0R1N0YXRlL0JNL05vcm1hbC9DQSAxPj4NCmVuZG9iag0KOSAwIG9iag0KPDwvQXV0aG9yKEFsZXhhbmRyYSBWZWdhKSAvQ3JlYXRvcij + /wBNAGkAYwByAG8AcwBvAGYAdACuACAAVwBvAHIAZAAgADIAMAAyADEpIC9DcmVhdGlvbkRhdGUoRDoyMDIzMDYwOTE0MDk0NS0wNicwMCcpIC9Nb2REYXRlKEQ6MjAyMzA2MDkxNDA5NDUtMDYnMDAnKSAvUHJvZHVjZXIo/v8ATQBpAGMAcgBvAHMAbwBmAHQArgAgAFcAbwByAGQAIAAyADAAMgAxKSA + Pg0KZW5kb2JqDQoxOCAwIG9iag0KPDwvVHlwZS9PYmpTdG0vTiA4L0ZpcnN0IDUzL0ZpbHRlci9GbGF0ZURlY29kZS9MZW5ndGggMzMxPj4NCnN0cmVhbQ0KeJxtUsFqwkAQvQv + wxzb02SN0RZEkKpYxBASoQfpYY3TGEx2Zd2A / n13mtik1Msyb2be23mzK0bggQhg9ApiCGIQgHB47JCAwdiFAwhcWfgQ + C + uAEHgw2SCEZM8iDHB5CwVbm9nwsSaKrWLgkqcpbaSxZau9gmeAdc78D4Bowx8Zk2n / V4tMmxEon8KjiJ4uPghz2t4c51WJSn7kB7U9IbV6dgaolhri7EuaCPP7Jb1ImmcFlfZOGdYZnif4rcaOl9ruoFopJdOS2lLGPKxUIcW8Ar2 + ooJpRZXJA9k6pg59 / hdFbmi5Ch5Qk7MlFOQNteqwcbmX9IFP + hDm9Ne61PrnjOXI5HlIS1uZGp0B78d3dnB81wWOuskkiI / UKe3vse1ZUaWuMyzyjgruS0IV3fTYVVedvx7xn / WHMqSLrsatk / Y730DQ6e7Ww0KZW5kc3RyZWFtDQplbmRvYmoNCjE5IDAgb2JqDQpbIDIyNl0gDQplbmRvYmoNCjIwIDAgb2JqDQo8PC9GaWx0ZXIvRmxhdGVEZWNvZGUvTGVuZ3RoIDE5Mzg5L0xlbmd0aDEgODE3NDA + Pg0Kc3RyZWFtDQp4nOx9B3xUVdr + OfdOy8wkM5NkkkkmYWaYJASGFCCBBJAMpNA7gwk1IYWAAQKEIgJGUdAo9l7Rta1YJgNqwO5iWQv2vhZ2XVdXse3qKgL5nnPfORDY1f + 31fX7z5s88zznPeWe + t6TH8kPxhljdnzoWG3lqIoZBf1stzPumcAYf6Jy1ITyq5qr4hnPzGBMKZw8vWDgtY / W3YO8s1Crtn5JXetF716EsiddgvwP6le3eXe1vlHM2LYLGNM / 0NS6cMnGd9UhjC1dy1h8YGHLyU2vVu4oYuwW1LF90NxY1 / DtxJPDaM + K9gY3wxF / Z8Z + pCuQzmpe0rZ2xDjjAaQ / YmzRHS3L6uvyGvrezNi9hSg + c0nd2tZ8c / abyG9Gee + Sxra6q07ftppxXzLSZyytW9J43YGv5zP2KfpbuLJ12cq2bjfbzHjGQVG + dUVja9LC3mmMnXITHvcJE3NhGLpv9uI1H8 + 3Df + apZmYsPs / Wf + s4NfHrpn8 / YFD7XGfmgYjGccURoZ6BnaY8T3mbd8fOLAt7lOtpR6WdofwuPuxdmZnw6EVcAHbwljiYO25nKm6AL + A6ZlJf6V + EJrsRay + wDYrzMQUm15RFJ2q6D5g + d2PsKxTtB7AJk73elmQsexnqQ / G65QcL + PdIk + ';

var puedeAprobarse = true;


const docTab = document.getElementById("DocumentosTab");
const conTab = document.getElementById("ContratosTab");
if (docTab != null && conTab != null) {
    var ultUrlContrato = "";
    var ultUrlDoc = "";
    var indiceCon = 1;
    var indiceDoc = 1;
    var esContratosSelect = false;
    docTab.addEventListener("click", () => { esContratosSelect = false; colocarURLenVisualizador(ultUrlDoc, indiceDoc); });
    conTab.addEventListener("click", () => { esContratosSelect = true; colocarURLenVisualizador(ultUrlContrato, indiceCon); });
}

//seccion de iconos
const IconoRechazado = '<a class="my-0" title = "Documento rechazado" style = "color:red !important;" ><i class="fa-solid fa-circle-xmark size-icon" ></i></a > ';
const IconoAprobado = '<a class="  my-0" title="Documento aprobado" style="color:green !important;"><i class="fa-solid fa-circle-check size-icon " ></i></a >';
const IconoVacio = '<a class="   my-0" title="Vacio" style="color:black;"><i class="fa-regular fa-file size-icon " ></i></a >';
const IconoLleno = '<a class="    my-0" href="#openModal" title="Cargado" style="color:black;"><i class="fa-solid fa-share-from-square size-icon " ></i></a >';
const IconoProceso = '<i class="fa-solid fa-arrow-rotate-right size-icon "></i>';
const IconoCargado = '<a class="  my-0" title="Cargado" style="color:black;"><i class="fa-solid fa-share-from-square size-icon " ></i ></a >'

const IconoFirmado = '<i class="fa-solid fa-file-contract" style="font-size: 20px;"  title="Firmado"></i>';
const IconoNoFirmado = '<i class="fa-solid fa-file-contract"></i>';
const IconoPendiente = '<a class="   my-0" title="Vacio" style="color:black;"><i class="fa-regular fa-file size-icon " ></i></a >';
const IcononEnviado = '<a class="my-0" title="Enviado" style="color:black;font-size: 22px;" ><i title="Enviado" class="fa-regular fa-paper-plane"></i></a >';



var UsuarioTienePermisos = window.UsuarioTienepermiso

if (UsuarioTienePermisos) {
    divpadre = "fileContainer3 input-group ";
    divA = "btn fileContainer3  btnm ";
    divInput = "position-absolute top-0 start-0 claseBtnTruco";
    estilosEnLinea = "background-color:transparent;margin-left:-2.3% ";
    openModal = "href = #openModal";
}
else {
    divpadre = "soloIconos ";
    divA = " ";
    divInput = "d-none";
    estilosEnLinea = "color: black";
    openModal = "";
}


indiceIconoVacio = 28;
indiceIconoLleno = 5;
function MostrarIconoStatus(i, statusValor) {
    const IconoProceso = `<a class="${divA} my-0 " id="IconoProceso_${i}" onclick="getDocumentID(${i})" ${openModal} style="${estilosEnLinea};" title="Documento en proceso"><input type="button" class="${divInput}"><i class="fa-solid fa-arrow-rotate-right size-icon"></i></a>`;

    const statusMap = {
        0: IconoVacio,
        5: IconoLleno,
        28: IconoVacio,
        30: IconoProceso,
        31: IconoAprobado,
        32: IconoRechazado,
        33: IcononEnviado,
        35: IconoFirmado,
        36: IconoNoFirmado
    };

    var IconoStatus = document.getElementById("IconoEstatus_" + i);
    IconoStatus.innerHTML = statusMap[statusValor];

}

//Visualizador
const totalDocumentos = 30;
for (var i = 0; i < totalDocumentos; i++) {
    try {
        statusValue = document.getElementById("statusDoc_" + i).value;
        MostrarIconoStatus(i, statusValue);

    } catch (e) {
    }
}


const tipos = ['image/jpg;', 'image/jpeg;', 'image/png;', 'application/pdf;']
const extensiones = ['image/jpg', 'image/jpeg', 'image/png', 'application/pdf']

async function SubirVisualizar(indice, indiceVisor) {
    var uploadField = document.getElementById("archivoInput_" + indice);

    const extension = uploadField.files[0].type;

    if (uploadField.files[0].size > 25165824) {
        Swal.fire({
            icon: 'info',
            title: 'Cuidado',
            text: 'El archivo es demasiado grande, favor de llamar al contact center"',
            confirmButtonColor: '#ff9800',

        })

        const txt64Upload = document.getElementById('txt64_' + indice)
        if (txt64Upload != undefined) {
            if (txt64Upload.value != "") {
                uploadField.value = "";
                visorExt(indice);
                MostrarIconoStatus(indice, indiceIconoVacio)
            } else {

                MostrarIconoStatus(indice, indiceIconoVacio)

                uploadField.value = "";

                const visualizador = document.getElementById('visualizador')

                if (visualizador) {
                    if (visualizador.getAttribute("src") != "" && visualizador.getAttribute("src") != null) {
                        uploadField.value = "";

                        await visorEmpty(indice);


                        $(".Eliminar" + indice).hide(3000);
                        $(".Eliminar" + indice).hide("fast");
                    }
                }
            }
        } else {

            MostrarIconoStatus(indice, IconoLleno);

            uploadField.value = "";

            await visorEmpty(indice);

            $(".Eliminar" + indice).hide(3000);
            $(".Eliminar" + indice).hide("fast");
        }

    } else if (!extensiones.includes(extension)) {
        Swal.fire({
            icon: 'warning',
            title: 'Uups',
            text: 'Sólo se permiten archivos con extensión .pdf, .png, .jpeg o .jpg',
            confirmButtonColor: '#ff9800',

        }).then((result) => {
            if (result.isConfirmed) {
                // Aquí puedes poner el código a ejecutar si el usuario confirma
                MostrarIconoStatus(indice, indiceIconoVacio)

                uploadField.value = "";
            };
        });
    }

    else if (extensiones.includes(extension) && !(uploadField.files[0].size > 67108864)) {

        MostrarIconoStatus(indice, indiceIconoLleno);
        visualizarArchivoSubido(uploadField, 1);
        
    }

    const canvasButton = document.querySelector(".bottomBar");
    canvasButton.classList.remove("oculta");
    canvasButton.classList.add("mostrando");
}


seccion = "";
function colocarURLenVisualizador(url, indice) {

    if (seccion !== 'Contratos') {
        seccion = ""
    }
    if (esContratosSelect) {
         ultUrlContrato = url ;
        indiceCon = indice;
    } else {
        ultUrlDoc = url 
        indiceDoc = indice;
    }

    var visualizador = document.getElementById("visorArchivo" + seccion);
    var Eliminar = 'class="Eliminar' + indice + '"';

    visualizador.innerHTML =
        '<div id="id_1"> <embed id="visualizador" src="' +
        url +
        '" width="270px" height="400px" ' +
        Eliminar + indice +
        '/> </div > ';

}


function visualizarArchivoSubido(uploadField, indice) {

    var archivoInput = uploadField;


    if (archivoInput.files && archivoInput.files[0]) {
        var visor = new FileReader();
        visor.onload = function (e) {
            var buffer = e.target.result;


            var blob = new Blob([buffer], { type: archivoInput.files[0].type });
            var url = window.URL.createObjectURL(blob);

            colocarURLenVisualizador(url, indice)

            auxiliar1 = url;
        };
        visor.readAsArrayBuffer(archivoInput.files[0]);
    }

}

//Visor
function visorExt(indice) {
    var archivoInput = document.getElementById("archivoInput_" + indice);
    var inputTxt64 = document.getElementById("txt64_" + indice);

    if (archivoInput.files && archivoInput.files[0]) {
        return new Promise(function (resolve, reject) {
            var visor = new FileReader();
            visor.onload = function (e) {
                var buffer = e.target.result;

                var blob = new Blob([buffer], { type: archivoInput.files[0].type });
                var url = window.URL.createObjectURL(blob);

                colocarURLenVisualizador(url, indice)

                auxiliar1 = url;
                resolve(); // resolvemos la promesa aquí, después de completar la carga del archivo
            };
            visor.onerror = function (e) {
                reject(e); // capturamos cualquier error que pueda ocurrir en la carga del archivo
            }
            visor.readAsArrayBuffer(archivoInput.files[0]);
        });
    }
    else if (inputTxt64 != undefined) {
        if (inputTxt64.value != "") {
            base64ValueData = inputTxt64.value;


            for (tipo of tipos) {
                if (base64ValueData.includes(tipo)) {
                    var type = tipo;
                    break;
                }
            }

            var palabra = "data:" + type + "base64,"
            base64Value = base64ValueData.replace(palabra, '')


            // Decodificamos el contenido en Base64 a un ArrayBuffer
            var binaryString = window.atob(base64Value);
            var bytes = new Uint8Array(binaryString.length);
            for (var i = 0; i < binaryString.length; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            var buffer = bytes.buffer;

            // Creamos el objeto Blob y la URL correspondiente
            var blob = new Blob([buffer], { type: type });
            var url = window.URL.createObjectURL(blob);

            colocarURLenVisualizador(url, indice);


        }
        else {

            colocarURLenVisualizador("", indice);

        }

    } else {
        colocarURLenVisualizador("", indice);
    }
}



function visorEmpty(indice) {
    base64Value = emptySheet

    var type = "application/pdf"; // Establecemos el tipo de archivo como PDF

    // Decodificamos el contenido en Base64 a un ArrayBuffer
    var binaryString = window.atob(base64Value);
    var bytes = new Uint8Array(binaryString.length);
    for (var i = 0; i < binaryString.length; i++) {
        bytes[i] = binaryString.charCodeAt(i);
    }
    var buffer = bytes.buffer;

    // Creamos el objeto Blob y la URL correspondiente
    var blob = new Blob([buffer], { type: type });
    var url = window.URL.createObjectURL(blob);


    colocarURLenVisualizador(url, indice);

}


function borrarArchivo(indice, tabla, IDdoc, IDstatusDoc) {

    archivoDelete = document.getElementById('archivoInput_' + indice)
    var inputTxt64 = document.getElementById("txt64_" + indice)
    const inputFileNombre = document.getElementById("DocumentoNombre_" + indice);

    if (archivoDelete.value != "" || inputTxt64.value != "") {
        Swal.fire({
            title: '¿Estás seguro de que deseas eliminar el documento?',
            html: 'Esta acción no se puede deshacer',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#ff9800',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ok',
            cancelButtonText: 'Cancelar'
        }).then(async (result) => {
            if (result.isConfirmed) {

                //Función 1
                if (archivoDelete.value != "") {
                    try {
                        await visorExt(indice);
                        MostrarIconoStatus(indice, indiceIconoVacio)

                        archivoDelete.value = "";

                        $(".Eliminar" + indice).hide(3000);

                        $(".Eliminar" + indice).hide("fast");

                        $("#visorArchivo").append("");


                        colocarURLenVisualizador("", indice);


                    } catch (e) {
                        console.log(e); // manejar el error aquí
                    }
                } else {

                    url = "/Usuarios/EliminarDocumento"


                    data = { tabla, IDdoc, IDstatusDoc }

                    $.ajax({
                        url: url,
                        type: 'GET',
                        data: data,

                        success: function (data) {

                            if (data.success) {
                                MostrarIconoStatus(indice, indiceIconoVacio)

                                // hacer algo si la solicitud fue exitosa	
                            } else {
                                // if any AJAX request fails, reject the promise	
                                throw new Error("Failed AJAX request");
                            }
                        }
                    })

                    await visorExt(indice);

                    inputTxt64.value = "";
                    inputFileNombre.value = null;

                    $(".EliminarTxt64_" + indice).hide(3000);
                    $(".EliminarTxt64_" + indice).hide("fast");

                    $("#visorArchivo").append("");

                    colocarURLenVisualizador("", indice);


                }

            }
        });
    }
    else {
        Swal.fire({
            title: '¡Registro fallido!',
            html: 'No hay ningún archivo seleccionado',
            icon: 'warning',
            confirmButtonColor: '#ff9800',
            confirmButtonText: 'Ok',
            customClass: {
                confirmButton: 'button_confirmacion'
            }
        });
    }
}

//Guardar Archivos


$('#AprobarPropiedad').click(function () {
    const aprobar = true;
    const PropiedadID = document.getElementById("IDPropiedad").value;
    var archivosN = 1;

    var idStatusValue;
    for (var indice = 1; indice < archivosN; indice++) {
        const idStatus = document.getElementById("statusDoc_" + indice)

        if (idStatus) {
            idStatusValue = idStatus.value;
        }


        if (idStatusValue == 30 || idStatusValue == 32 || !idStatus) {
            break;
        }
    }
    const mensaje = null;
    if (puedeAprobarse) {
        url = "/Propiedades/cambiarStatusPropiedad"
        data = { aprobar, PropiedadID, mensaje }


        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            confirmButtonColor: '#ff9800',
            confirmButtonText: 'Ok',
            success: function (data) {
                if (data.succes) {
                    console.log("fue Exitosa")
                    // hacer algo si la solicitud fue exitosa	
                } else {
                    // if any AJAX request fails, reject the promise	
                    throw new Error("Failed AJAX request");

                }
            }

        })

        Swal.fire({
            icon: 'success',
            title: 'Se aprobó correctamente',
            showConfirmButton: true,
            confirmButtonText: "Ok",
            customClass: {
                confirmButton: 'button_confirmacion'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/propiedades/propiedadestab";
            }
        });

        ;
    }
    else {
        Swal.fire({
            icon: 'error',
            title: '¡Registro fallido!',
            html: 'No es posible aprobar la propiedad, hasta que todos los documentos sean aprobados.',
            confirmButtonText: "Ok",
            customClass: {
                confirmButton: 'button_confirmacion'
            }
        })
    }
})

$('#CancelarPropiedad').click(function () {
    const aprobar = false;
    const PropiedadID = document.getElementById("IDPropiedad").value;
    const mensaje = document.getElementById("mensajeRechazo").value;

    if (mensaje.trim() === "") {
        Swal.fire({
            title: "Error",
            text: "Favor de escribir el motivo de rechazo de esta propiedad",
            icon: "error",
            confirmButtonColor: '#f4971c',
        });
    } else {
        url = "/Propiedades/cambiarStatusPropiedad"
        data = { aprobar, PropiedadID, mensaje }
        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Registro exitoso!',
                        html: 'La propiedad se rechazo correctamente',
                        confirmButtonText: "Ok",
                        showConfirmButton: true,

                        customClass: {
                            confirmButton: 'button_confirmacion'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = "/propiedades/propiedadestab";
                        }
                    });
                }
            }
        })
    }
})

$("#Guardarbtn").click(function () {

    var archivosN = 23;//este es el numero de archivos, seria mejor llamar la variable como numeroDeArchivos , deuda tecnica estetica pero util 
    var url = '/Propiedades/GuardarDetalles';
    const urlPropietario = '/Propiedades/GuardarDetallesPropietario'
    const urlBroker = '/Propiedades/EditarDocumentosBroker'
    const urlLead = '/Propiedades/EditarDocumentosLead'
    const urlHipo = '/Propiedades/EditarDocumentosHipo'

    var promises = []; // array to store all the AJAX requests

    for (var indice = 1; indice < archivosN; indice++) {
        var formData = new FormData();
        fileInput = document.getElementById("archivoInput_" + indice)

        var isSaved = true;
        try {
            if (fileInput.files[0]) {
                file = fileInput.files[0];

                IDdocPropiedad = document.getElementById("IDdoc_" + indice).value;
                IDTipoArchivo = document.getElementById("IDTipoArchivo_" + indice).value;
                fileNombre = document.getElementById("FileNombre_" + indice).value;

                IDdoc = document.getElementById("IDdoc_" + indice).value;
                Identificador = document.getElementById("Identificador_" + indice).value;
                IDPropiedad = document.getElementById("Identificador_1").value;

                PropiedadIDG = document.getElementById("PropiedadGUID").value;

                formData.append('PropiedadGUID', PropiedadIDG);
                formData.append('file', file);
                formData.append('FileName', fileNombre);
                formData.append('IDTipoArchivo', IDTipoArchivo);
                formData.append('IDdoc', IDdoc);

                if (indice < 6) {
                    formData.append('PropiedadID', Identificador);
                }
                else if (indice > 6 && indice < 14) {
                    url = '/Propiedades/GuardarDetallesPropietario'

                    controller = document.getElementById("controller_" + indice).value;

                    formData.append('UsuarioID', Identificador);
                    formData.append('PropiedadID', IDPropiedad);
                    formData.append('controller', controller);
                    formData.append('IDTipoArchivo', IDTipoArchivo);

                } else if (indice >= 14 && indice < 21) {
                    url = '/Propiedades/EditarDocumentosLead'
                    formData.append('UsuarioID', Identificador);
                } else if (indice >= 21 && indice < 23) {
                    url = '/Propiedades/EditarDocumentosHipo'
                    formData.append('UsuarioID', Identificador);
                    formData.append('PropiedadID', IDPropiedad);

                }


                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Ok',
                    success: function (data) {
                        if (data.succes) {
                            console.log("fue Exitosa")
                            isSaved = isSaved * true
                            // hacer algo si la solicitud fue exitosa
                        } else {
                            // if any AJAX request fails, reject the promise
                            throw new Error("Failed AJAX request");
                        }
                    }
                })

            }
        } catch (ex) {
            Swal.fire({
                icon: 'success',
                title: '¡Registro exitoso!',
                showConfirmButton: true,
                confirmButtonText: "Ok",
                customClass: {
                    confirmButton: 'button_confirmacion'
                }
            });
        }
    }
    if (isSaved) {
        Swal.fire({
            icon: 'success',
            title: '¡Los documentos se guardaron exitosamente!',
            showConfirmButton: true,
            confirmButtonText: "Ok",
            customClass: {
                confirmButton: 'button_confirmacion'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                location.reload();
            }
        });

    }

});

var estadosSeleccionados = [];

$(document).on('change', 'input[type=checkbox]', function () {
    var estadosSeleccionados = $('input[type=checkbox]:checked').map(function () {
        return $(this).data('nombre');
    }).get();

    // Actualizar el elemento HTML con los estados seleccionados
    $('#estados-seleccionados').text(estadosSeleccionados.join(', '));
});


// Abrir el inspector de archivos

$(document).on("click", "#add-photo", function () {
    $("#add-new-photo").click();
});

// -> Abrir el inspector de archivos

// Tomamos el evento change

//$(document).on("change", "#add-new-photo", function () {


//});

// -> Eliminar previsualizaciones

// Funciones para el modal que de las alertas para el visualizador de varias imagenes

function showModal(card) {
    $("#" + card).show();
    $(".modal").addClass("show");
}

function closeModal() {
    $(".modal").removeClass("show");
    setTimeout(function () {
        $(".modal .modal-card").hide();
    }, 300);
}

function loading(status, tag) {
    if (status) {
        $("#loading .tag").text(tag);
        showModal("loading");
    }
    else {
        closeModal();
    }
}

function showMessage(message) {
    $("#Message .tag").text(message);
    showModal("Message");
}

function percentage_2() {

    // Method returns the element of num1 id
    var num1 = document.getElementById("num1").value;

    // Method returns the elements of num2 id
    var num2 = document.getElementById("num2").value;
    document.getElementById("value2")
        .value = (num1 * 100) / num2 + "%";
}

//Seleccion de estados para la seccion de zona en nuevo usuario
$(document).ready(function () {

    $('[name="checks[]"]').click(function () {

        var arr = $('[name="checks[]"]:checked').map(function () {
            return this.value;
        }).get();

        var str = arr.join(',');

        $('#arr').text(JSON.stringify(arr));

        $('#str').text(str);

    });

});

/*Nuevo progress step*/

$(document).ready(function () {

    var navListItems = $('div.setup-panel div a'),
        allWells = $('.setup-content'),
        allNextBtn = $('.nextBtn');

    allWells.hide();

    navListItems.click(function (e) {
        e.preventDefault();
        var $target = $($(this).attr('href')),
            $item = $(this);

        if (!$item.hasClass('disabled')) {
            navListItems.removeClass('btn-primary').addClass('btn-default');
            $item.addClass('btn-primary');
            allWells.hide();
            $target.show();
            $target.find('input:eq(0)').focus();
        }
    });

    allNextBtn.click(function () {
        var curStep = $(this).closest(".setup-content"),
            curStepBtn = curStep.attr("id"),
            nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
            curInputs = curStep.find("input[type='text'],input[type='url']"),
            isValid = true;

        $(".form-group").removeClass("has-error");
        for (var i = 0; i < curInputs.length; i++) {
            if (!curInputs[i].validity.valid) {
                isValid = false;
                $(curInputs[i]).closest(".form-group").addClass("has-error");
            }
        }

        if (isValid)
            nextStepWizard.removeAttr('disabled').trigger('click');
    });

    $('div.setup-panel div a.btn-primary').trigger('click');
});

// Acordeon
$('.acordeon').on('click', 'h2', function () {
    var t = $(this);
    var tp = t.next();
    var p = t.parent().siblings().find('p');
    tp.slideToggle();
    p.slideUp();
});



$(function () {
    $('[data-toggle="tooltip"]').tooltip({ 'html': true });
    $('.tooltip').removeClass('fade');
});

$('.tooltipped').hover(function () {
    var tooltipText = $(this).data('tooltip');
    var tooltip = $('<div class="tooltip">' + tooltipText + '</div>').appendTo('body');
    var elementOffset = $(this).offset();
    var elementWidth = $(this).outerWidth();
    var tooltipHeight = tooltip.outerHeight();
    tooltip.css({
        top: elementOffset.top - tooltipHeight - 10,
        left: elementOffset.left + elementWidth / 2 - tooltip.outerWidth() / 2
    });
    tooltip.stop().fadeIn();
}, function () {
    $('.tooltip').stop().fadeOut(function () {
        $(this).remove();
    });
});


function openModalRechazar(data) {
    var modal = document.getElementById('modalRechazo');
    // Obtén una referencia al elemento mediante su ID
    var textAreaMotivoRechazo = document.getElementById("MensajeMotivoRechazo");

    // Actualiza el contenido utilizando innerHTML
    textAreaMotivoRechazo.innerHTML = '<textarea readonly class="form-control" style="height: 140px;">' + data.mensaje + '</textarea>';


    modal.style.display = "block";

}



const MotivoRechazobtn = document.getElementById('etiquetaRechazado')


MotivoRechazobtn.addEventListener('click', function () {

    const PropiedadIDRechazar = document.getElementById('PropiedadIdRechazo').value;

    url = "/Propiedades/ObtenerMensaje"
    data = { PropiedadIDRechazar };

    $.ajax({
        url: url,
        type: 'GET',
        data: data,
        success: function (data) {
            console.log(data);
            openModalRechazar(data);
        }
    })

})

// Obtén el elemento select por su ID
var rolSelect = document.getElementById('RolS');

// Agrega un event listener para escuchar los cambios en el valor seleccionado
rolSelect.addEventListener('click', function () {
    // Accede al valor seleccionado
    var selectedValue = rolSelect.value;

    if (selectedValue == 'Propietario') {
        $('#DocumentoNOPropietario').addClass('d-none');
        $('#DocumentoPropietario').removeClass('d-none');
    }
    else {
        $('#DocumentoNOPropietario').removeClass('d-none');
        $('#DocumentoPropietario').addClass('d-none');

    }


    // Haz algo con el valor seleccionado, como imprimirlo en la consola
    console.log(selectedValue);
});

//$(document).ready(function () {
//    $('[data-toggle="tooltip"]').tooltip();
//});

//// Obtener el elemento
//var SinToolTip = document.querySelectorAll(".fileContainer3");
//for (elemento of SinToolTip) {
//    // Remover el atributo data-toggle
//    elemento.removeAttribute("data-toggle");

//    // Remover el atributo data-placement
//    elemento.removeAttribute("data-placement");
//}



