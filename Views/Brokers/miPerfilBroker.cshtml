@model BrokersModel;
@{
	Layout = "_NavUsuarios";
	ViewData["Title"] = "Rummet / Mi Perfil";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager




<!DOCTYPE html>
<html lang="es">

<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge">

	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/styles.css">

	<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


	<link rel="stylesheet" href="~/css/estilosGenerales.css" />
	<link rel="stylesheet" href="~/css/miperfil.css" />

	<link rel="icon" type="image/png" sizes="16x16" href="~/img/imagen-logo/ISOTIPO_RUMMET2.png">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

	<script src="https://kit.fontawesome.com/9682158e46.js" crossorigin="anonymous"></script>
</head>

<body>

	<!--animacion de fondo-->
	<ul class="circles">
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
		<li></li>
	</ul>

	<h4 class="ms-4 tituloVista">Mi perfil </h4>

	<form id="myform" asp-controller="Brokers" asp-action="miPerfil" enctype="multipart/form-data" class="container-fluid   row  px-3" style="margin: 0 0 0 49px; width: -webkit-fill-available;">

		@* PRIMERAS DOS COLUMNAS DE TARJETAS DE INFORMACIÓN *@
		<div class="row row-cols-1 row-cols-lg-2 px-0">
			<div class="col-lg-6 col-md-12 mb-4 ps-0">
				<!-- ----TARJETA DE DATOS GENERALES -->
				<div class="row mb-2 contenedorGeneralBlanco">
					<h6 class="text-black fs-5">Datos generales</h6>
					<!--foto de perfil-->
					<div class="px-0 col-lg-4 col-md-12 d-flex align-items-center">
						<div class="mt-3 col mb-2 d-flex flex-column flex-wrap align-items-center">
							<div class="fileContainer imgPerfilContainer text-center">
								@if (Model.txtBase64 != null)
								{

									<img src="@Model.txtBase64" id="preview" alt="" class="profile_picture rounded-circle">
								}
								else
								{
									<img src="/img/image-form-usuario/Recurso_usuario.png" id="preview" alt="" class="profile_picture rounded-circle">
								}
								<label for="archivo" class="editIcon">

									<img src="~/img/imagen-logo/circulo.png" />

								</label>
								<input type="file" asp-for="imgPerfil" id="archivo" onchange="cargarImagen()" class="inputFoto d-none" accept="image/*">
							</div>
						</div>

					</div>
					<!--info inputs(NombreApellidosFecha de cumpleaños) -->
					<div class=" col-lg-8 col-md-12">
						<i class="fa-solid fa-pen-circle"></i>
						<div class="input-containerData">
							<input class="input-fieldData" type="text" asp-for="Nombre" oninput="limitarLetrasConAcentos(this)" maxlength="47"
								   aria-required="true" required>
							<label class="input-labelData" for="Nombre">Nombre</label>
						</div>
						<div class="row row-cols-2 my-5">
							<div class="input-containerData col">
								<input class="input-fieldData " type="text" asp-for="ApellidoP" oninput="limitarLetrasConAcentos(this)" maxlength="47"
									   aria-required="true" required>
								<label class="input-labelData inputsModified" for="Apelido Paterno">Apellido paterno</label>
							</div>
							<div class="input-containerData col">
								<input class="input-fieldData" type="text" asp-for="ApellidoM" oninput="limitarLetrasConAcentos(this)" maxlength="47"
									   aria-required="true" required>
								<label class="input-labelData inputsModified" for="Apelido Materno">Apellido materno</label>
							</div>
						</div>
						<div class="input-containerData mb-5">
							<label class="input-labelData " for="fecha de cumpleaños">Fecha de nacimiento</label>
							<input for="fecha de cumpleaños" asp-for="FecCump" class="input-fieldData fechaNacimiento" type="text" onfocus="(this.type='date')" onblur="if(!this.value) this.type='text'" />
						</div>

					</div>
				</div>

				<!-- TARJETA DE DATOS PERSONALES -->
				<div class="row contenedorGeneralBlanco">
					<h6 class="text-black fs-5 mb-4">Datos personales</h6>
					<div class="row row-cols-2 pe-0 mb-5">
						<div class="input-containerData col">
							<input class="input-fieldData uppercaseText" asp-for="Curp" type="text" maxlength="18" oninput="limitarLetrasYNumeros(this)" required>
							<label class="input-labelData inputsModified" for="CURP">CURP</label>
						</div>
						<div class="input-containerData col pe-0">
							<input class="input-fieldData uppercaseText" asp-for="Rfc" maxlength="13" type="text" oninput="limitarLetrasYNumeros(this)" required>
							<label class="input-labelData inputsModified" for="rfc">RFC</label>
						</div>
					</div>
					<div class="row row-cols-2 pe-0 mb-3">
						<div class="input-containerData col">
							<input asp-for ="Clabe" class="input-fieldData" type="text" maxlength="18" min="0" 
								   onkeypress="return event.charCode >= 48 && event.charCode <= 57" oninput="validarNumeross(this)">
							<label class="input-labelData inputsModified" for="clabe">Clabe interbancaria</label>
						</div>
						<div class="input-containerData col pe-0">
							
							<label class="input-labelData-select" for="Banco">Banco</label>
							@{
								// Crear una lista de elementos de SelectList
								var bancos = new List<SelectListItem>
							{
							new SelectListItem { Value = "0", Text = "--Banco--" }
							};
								bancos.AddRange(Model.BancoL.Select(banco => new SelectListItem { Value = banco.BancoList, Text = banco.BancoList }));
							}
							@Html.DropDownListFor(model => model.Banco, new SelectList(bancos, "Value", "Text"), new { @class = "selector-estilos selector-con-label w-100" })



@* 

							@Html.DropDownListFor(model => model.Banco, new
																SelectList(Model.BancoL, "BancoList", "BancoList"), "--Banco--", new
																{ @class = "selector-estilos selector-con-label w-100" }) *@
						</div>
					</div>
				</div>
			</div>
			<!-- TARJETA DE datos de contacto -->
			<div class="col-lg-6 col-md-12 mb-4 datosContacto">
				<div class="contenedorGeneralBlanco h-100">
					<h6 class="text-black fs-5 mb-4">Datos de contacto</h6>
					<div class="px-2">
						<div class="input-containerData">
							<input asp-for="Correo" class="input-fieldData" type="email" required>
							<input type="hidden" asp-for="CorreoPE" value="@Model.Correo" />
							<input type="hidden" asp-for="@Model.IDBroker" value="@Model.IDBroker" />

							<label class="input-labelData " for="correo electronico">Correo electrónico</label>
						</div>
						<div class="row my-5">
							<div class="col-3 col-sm-6 col-lg-6 col-md-4">
								<div class="input-containerData ml-personalizadoBroker d-inline-flex w-100">
									<select class="selector-estilos" id="Lada" name="Lada" aria-invalid="false">
										<option value="+52" class="flag-icon flag-icon-mx" selected>+52 (MX)</option>
										<option value="+54" class="flag-icon flag-icon-mx">+54 (ARG)</option>
										<option value="+57" class="flag-icon flag-icon-gb">+57 (COL)</option>
										<option value="+53" class="flag-icon flag-icon-gb">+53 (CUB)</option>
										<option value="+1" class="flag-icon flag-icon-us">+1 (EE.UU)</option>
										<option value="+48" class="flag-icon flag-icon-us">+48 (PL)</option>
										<option value="+44" class="flag-icon flag-icon-gb">+44 (UK)</option>
									</select>
									<input class="input-fieldData w-100" type="tel" asp-for="Tel" oninput="validarNumeros(this)" maxlength="10">
									<label class="input-labelData" for="telefono">Teléfono</label>
								</div>
							</div>
							<div class="col-3 col-sm-6 col-lg-6 col-md-4 ps-0">
								<div class="input-containerData ml-personalizadoBroker d-inline-flex w-100">
									<select class="selector-estilos" id="Lada2" name="Lada" aria-invalid="false">
										<option value="+52" selected class="flag-icon flag-icon-mx">+52 (MX)</option>
										<option value="+54" class="flag-icon flag-icon-mx">+54 (ARG)</option>
										<option value="+57" class="flag-icon flag-icon-gb">+57 (COL)</option>
										<option value="+53" class="flag-icon flag-icon-gb">+53 (CUB)</option>
										<option value="+1" class="flag-icon flag-icon-us">+1 (EE.UU)</option>
										<option value="+48" class="flag-icon flag-icon-us">+48 (PL)</option>
										<option value="+44" class="flag-icon flag-icon-gb">+44 (UK)</option>
									</select>
									<input class="input-fieldData w-100" type="tel" asp-for="Tel2" oninput="validarNumeros(this)" maxlength="10">
									<label class="input-labelData" for="telefono2">Teléfono 2</label>
								</div>
							</div>
						</div>
						<div class="row row-cols-2">
							<div class="input-containerData">
								<input class="input-fieldData" type="text" asp-for="CP" value="@Model.CPInt" ninput="validarNumeros(this)" maxlength="9">
								<label class="input-labelData inputsModified" for="codigo postal">Código postal</label>
							</div>
							<div class="input-containerData">
								<input class="input-fieldData" type="text" asp-for="Calle" oninput="limitarLetrasConAcentos(this)">
								<label class="input-labelData inputsModified" for="Nombre de la calle">Calle</label>
							</div>
						</div>
						<div class="row row-cols-2 my-5">
							<div class="input-containerData col">
								<input class="input-fieldData" type="number" asp-for="NoExt" oninput="validarNumeros(this)" maxlength="4">
								<label class="input-labelData inputsModified" for="no exterior">No. Ext.</label>
							</div>
							<div class="input-containerData col">
								<input class="input-fieldData" type="number" asp-for="NoInt" oninput="validarNumeros(this)" maxlength="4">
								<label class="input-labelData inputsModified" for="no interior">No. Int.</label>
							</div>
						</div>
						<div class="row row-cols-2">
							<div class="input-containerData">
								<label class="input-labelData-select" for="Colonia">Colonia</label>

								<!--COLONIA CON FUNCIONALIDAD-->
								<select asp-for="Colonia" id="Colonia" class="selector-estilos selector-con-label w-100" required>
									<option value="">--Seleccione una colonia--</option>
								</select>

								<input type="text" asp-for="Colonia" name="Colonia" id="colonia" class="d-none form-control"
									   placeholder=" " value="@Model.Colonia" />
								<input type="text" asp-for="NColonia" name="NColonia" id="NColonia" class="d-none form-control"
									   placeholder=" " />
								<input asp-for="IDcolonia" class="d-none" id="IDcolonia" value="" />
							</div>
							<div class="input-containerData">
								<input class="input-fieldData" type="text" asp-for="Municipio" id="n_Municipio" oninput="limitarLetrasConAcentos(this)">
								<label class="input-labelData inputsModified" for="alcaldia o municipio ">Alcaldía o municipio </label>
							</div>
						</div>
						<div class="row row-cols-2 mt-5 mb-3">
							<div class="input-containerData">
								<input class="input-fieldData" type="text" asp-for="Estado" id="n_Estado" oninput="limitarLetrasConAcentos(this)">
								<label class="input-labelData inputsModified" for="estado ">Estado </label>
							</div>
							<div class="input-containerData">
								<input class="input-fieldData" type="text" asp-for="Pais" id="n_Pais" oninput="limitarLetrasConAcentos(this)">
								<label class="input-labelData inputsModified" for="pais ">País </label>
							</div>
						</div>
						<div class="row">
							<label class="mt-3" style="font-size:14px;">
								@Html.CheckBox("Facturacion", null, Model.Facturacion)
								Esta dirección es la misma que la de facturación
							</label>
						</div>
					</div>
				</div>
			</div>
		</div>


		<div class="row my-2 p-sm-0">
			<div class="col contenedorGeneralBlanco row row-cols-2 row-cols-sm-1">
				<label for="">
					<h5 class="ms-1 text-black">Zona</h5>
				</label>
				<div class="input-group justify-content-between d-lg-inline-flex mt-2">
					<div class="mt-1 ms-2 col">
						<label for="t_operacion" class=" align-content-start cotrol-label color_letter2 mb-3">Selecciona tus zonas</label>
						<ul class="lista-estados row row-cols-lg-4 row-cols-md-2 row-cols-sm-1  fw-light" style=" font-size: 14px;">
							@for (var i = 0; i < Model.ZonasL.Count; ++i)
							{
								<li class="d-lg-inline-flex">
									@Html.CheckBoxFor(model => model.ZonasL[i].isSelected, new { @class = "form-check-input", @id = @Model.ZonasL[i].Zona, data_nombre = @Model.ZonasL[i].Zona })
									@Html.HiddenFor(model => model.ZonasL[i].Zona)
									<label class="ms-1">@Model.ZonasL[i].Zona</label>
								</li>
							}
						</ul>
					</div>
				</div>
			</div>
		</div>

		<div class="row my-2 p-sm-0 tabla-documentos">
			<div class="col contenedorGeneralBlanco row row-cols-2 p-0">
				<div class="col-lg-8 pe-0">
					<ul class="col-lg-8 nav nav-tabs" role="tablist">
						<li class="nav-item">
							<a class="nav-link active" data-bs-toggle="tab" id="DocumentosTab" href="#documentacion">Documentación</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" data-bs-toggle="tab" id="ContratosTab" href="#contratos">Contratos</a>
						</li>
					</ul>

					<div class="tab-content controlador_usuarios">
						<div id="documentacion" class="tab-pane active col-12 pe-4 contenedorDocumentos">
							<div class=" my-custom-scrollbar  table-height table-responsive">
								<table class="table table-hover border-gray h-100 border">
									<tbody>
										@{
											var documento = Model.DocEUsuario;
											int estadoDocumento;
											string fileNombre;
											List<string> DocList = new List<string>();
											DocList.Add("Identificación oficial (Passaporte, INE, FM3)");
											DocList.Add("CURP");
											DocList.Add("RFC");
											DocList.Add("Comprobante de domicilio");
											DocList.Add("Constancia de situación fiscal");
											DocList.Add("Estado de cuenta (caratula)");
											int indice = 0;
										}
										@for (int i = 0; i < 6; i++)
										{
											indice = indice + 1;
											<tr class="tabla-hover">
												<th scope="row">@indice</th>
												<td colspan="2">@DocList[i]</td>
												<td>
													<div class="fileContainer2 input-group btn btnm" style="background-color:transparent">
														<input type="file" asp-for="DocEUsuario[i].Documento" id="archivoInput_@i" class="position-absolute top-0 start-0 claseBtnTruco"
															   onchange="SubirVisualizar(@i)">
														<i class="fa-solid fa-file-arrow-up size-icon "></i>
														<input asp-for="DocEUsuario[i].IDdocUsuario" class="d-none" value="@documento[i].IDdocUsuario" />
														<input asp-for="DocEUsuario[i].IDtipoArchivo" value="@documento[i].IDtipoArchivo" class="d-none">
														<input asp-for="DocEUsuario[i].archivoNombre" id="DocumentoNombre_@i" value="@documento[i].archivoNombre" class="d-none">
														<input class="d-none" id="txt64_@i" value="@documento[i].txt64">
													</div>
												</td>
												<td>
													<div class="fileContainer3  input-group btn btnm" style="background-color:transparent">
														<input type="button" name="d_archivo" id="archivoInput_delete_@i" onclick="borrarArchivo(@i,'brokers',@documento[i].IDdocUsuario, @documento[i].IDStatusDoc);"
															   class="eliminarprueba position-absolute top-0 start-0 claseBtnTruco">
														<i class="fa-solid fa-trash-can size-icon "></i>
													</div>
												</td>
												<td>
													<div class="fileContainer3 input-group btn btnm" style="background-color:transparent">
														<input type="button" name="v_archivo4" id="" onclick="visorExt(@i)" class="position-absolute top-0 start-0 claseBtnTruco">
														<i class="fa-solid fa-eye size-icon "></i>
													</div>
												</td>
												<td>
													<input id="IDdoc_@i" class="d-none" value="@documento[i].IDdocUsuario" />
													<div class="soloIconos" id="IconoEstatus_@i"></div>
													<input id="statusDoc_@i" value="@Model.DocEUsuario[i].IDStatusDoc" class="d-none">
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
							<div class="input-group d-flex justify-content-start">
							</div>
						</div>
						<div id="contratos" class="tab-pane col-12 pe-4 contenedorDocumentos ">
							<div class=" my-custom-scrollbar  table-height table-responsive">
								<table class="table table-hover border-gray h-100 border">
									<tbody>
										@{
											DocList.Add("Contrato de prestación de servicios");
											DocList.Add("Términos y condiciones");
											DocList.Add("Aviso de privacidad");
											DocList.Add("Código de ética");
										}

										@for (int i = 6; i < 10; i++)
										{
											indice = indice + 1;
											<tr class="tabla-hover">
												<th scope="row">@indice</th>
												<td colspan="2">@DocList[i]</td>
												<td>
													<div class="fileContainer2 input-group btn btnm" style="background-color:transparent">
														<input type="file" asp-for="DocEUsuario[i].Documento" id="archivoInput_@i" class="position-absolute top-0 start-0 claseBtnTruco"
															   onchange="SubirVisualizar(@i)">
														<i class="fa-solid fa-file-arrow-up size-icon "></i>
														<input asp-for="DocEUsuario[i].IDdocUsuario" class="d-none" value="@documento[i].IDdocUsuario" />
														<input asp-for="DocEUsuario[i].IDtipoArchivo" value="@documento[i].IDtipoArchivo" class="d-none">
														<input asp-for="DocEUsuario[i].archivoNombre" id="DocumentoNombre_@i" value="@documento[i].archivoNombre" class="d-none">
														<input class="d-none" id="txt64_@i" value="@documento[i].txt64">
													</div>
												</td>
												<td>
													<div class="fileContainer3  input-group btn btnm" style="background-color:transparent">
														<input type="button" name="d_archivo" id="archivoInput_delete_@i" onclick="borrarArchivo(@i,'usuarios',@documento[i].IDdocUsuario, @documento[i].IDStatusDoc);"
															   class="eliminarprueba position-absolute top-0 start-0 claseBtnTruco">
														<i class="fa-solid fa-trash-can size-icon "></i>
													</div>
												</td>
												<td>
													<div class="fileContainer3 input-group btn btnm" style="background-color:transparent">
														<input type="button" name="v_archivo4" id="" onclick="visorExt(@i)" class="position-absolute top-0 start-0 claseBtnTruco">
														<i class="fa-solid fa-eye size-icon "></i>
													</div>
												</td>
												<td>
													<input id="IDdoc_@i" class="d-none" value="@documento[i].IDdocUsuario" />
													<div class="soloIconos" id="IconoEstatus_@i"></div>
													<input id="statusDoc_@i" value="@Model.DocEUsuario[i].IDStatusDoc" class="d-none">
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
				@* ESTE ES EL VISUALIZADOR *@
				<div class="col-4 border contenedorVisualizador">
					<div class="input-group d-flex">
						<div id="visorArchivo" class="size-file d-flex justify-content-end">
						</div>
					</div>
				</div>
			</div>
		</div>

		@* MODAL DEL CAMBIO DE CONTRASEÑA *@
		<div class="row my-2 p-sm-0">
			<div class="col contenedorGeneralBlanco row row-cols-2 changepassword row-cols-sm-1">
				<h6 class="text-black fs-5">Restablecer contraseña</h6>
				<div class="mb-2">
					<button type="button" class="btn btn-fill btn-dark-blue text-white btn-wd" data-bs-toggle="modal" data-bs-target="#cambioPasswordperfil">Restablecer contraseña</button>
				</div>
			</div>
		</div>

	<div class="bottomBar oculta ">
		<h6>¿Desea guardar los cambios realizados?</h6>
		<button class=" btn-aceptar" id="aceptarButton">Aceptar</button>
		<button type="button" class=" btn-rechazar" id="cancelarButton">Cancelar</button>
	</div>

	</form>

	<form method="post" asp-controller="Usuarios" asp-action="ResetPassword" id="formcontra">
		<div class="modal fade" id="cambioPasswordperfil" tabindex="-1" role="dialog" aria-hidden="true" aria-labelledby="exampleModalLabel">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title fs-5 modal-modificado-titulo" id="exampleModalLabel">Restablecer la contraseña</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:none;">
							<span aria-hidden="true">×</span>
						</button>
					</div>
					<div class="modal-body px-4 pt-0">
						<input type="hidden" name="idUsuarioP">
						<input type="hidden" name="emailUser" id="eU" value="tuhogarenmorelos@hotmail.com" autocomplete="off">
						<div class="form-group is-empty">
							<div class="d-inline form-group label-floating is-empty ms-3">
								<div class="d-flex">
									<label for="modalResetPassword" class="color_letter2 fs-6">Nueva contraseña</label>
								</div>
								<input type="password" id="modalResetPassword" class="mt-2 form-control inputContraseñaModal" style="width:85%;">
								<span class="password-toggle1" onclick="togglePasswordVisibility1()"><i class="far fa-eye" aria-hidden="true"></i></span>
								<span class="material-input"></span>
							</div>
						</div>
						<div class="form-group is-empty">
							<div class="d-inline form-group label-floating is-empty ms-3">
								<div class="d-flex">
									<label for="modalconfirmPassword" class="color_letter2 fs-6">Confirma la contraseña</label>
								</div>
								<input type="password" id="modalconfirmPassword" class="mt-2 form-control inputContraseñaModal" style="width:85%;">
								<span class="password-toggle2" onclick="togglePasswordVisibility2()"><i class="far fa-eye" aria-hidden="true"></i></span>
								<span class="material-input"></span>
							</div>
						</div>
						<ul class="condicionesContraseña ps-3">
							<li class="caracteres8">Al menos 8 carácteres</li>
							<li class="valfa">Un valor alfanumérico</li>
							<li class="cespecial">Un carácter especial</li>
							<li class="cmayus">Al menos 1 carácter en mayúsculas</li>
						</ul>
					</div>
					<div class="cuadro-alerta">
						<div class="alert alert-success d-none mensajeError mx-auto text-center w-50" role="alert" id="mensajeAlertaContra"></div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-dark-blue text-white" id="btnEnviarContraseña" style="text-transform:inherit;">Guardar cambios</button>
					</div>
				</div>
			</div>
		</div>
	</form>
</body>
</html>



<!--MODAL PARA APROBAR O RECHAZAR DOCUMENTOS-->
    <div id="openModal" class="modalDialog" style="display:none;">
		<div>
			<a href="#close" title="Close" class="close" onclick="resetModal()">X</a>
			<div>
				<div class="modal-header" id="modal-header">
					<h1 class="modal-title fs-5 mt-2"> ¿Qué deseas hacer con este documento?</h1>

				</div>
				<div class="modal-body mx-auto">
					<div class="d-flex d-inline-flex " style="margin: 0 0 0 68px;">
						<button class="btn btn-success mr-1" id="aprbarBtn" style="text-transform:none;" onclick="aprovar()">Aprobar</button>

						<button class="btn btn-danger ms-1" id="rechazrBtn" style="text-transform:none;" onclick="rechazar()">Rechazar</button>
					</div>
					<!--submodal rechazar -->
					<div class=" text-danger " id="motivoRechazo" style="display:none;">
						<h4 class="text-danger modal-title fs-5">Motivo de rechazo </h4>
						<div class="form-floating">
							<!--<label for="floatingTextarea" style="display:none;">¿Por que rechazas el documento?</label>-->
							<textarea class="txtareaModalrechazo" placeholder="¿Por qué rechazas el documento?" id="mensajeRechazado" style="height:100px;"></textarea>
						</div>


						<div id="alertaRazonRechazo" class="mt-1">
						</div>

						<a class="btn btn-danger " onclick="guardarCambiosRechazar()" style=" margin: 0 0 0 132px; text-transform:capitalize;">Rechazar</a>
					</div>
					<!--submodal aprobar -->
					<div class=" text-success" id="motivoAprovado" style="display:none;">
						<h6 class="modal-title fs-5">¿Estás seguro que deseas aprobar este documentos?</h6>
						<button class="btn btn-success " href="#close" id="GuardarCambios" style="margin: 10px 0 0 132px;text-transform:capitalize;" onclick="guardarCambiosAprobar()">
							Aprobar
						</button>
					</div>
				</div>

			</div>
		</div>
	</div>

<script>


	window.UsuarioTienepermiso = false;

</script>

<script>
	document.getElementById('btnEnviarContraseña').addEventListener('click', function () {
		var password = document.getElementById('modalResetPassword').value;
		var confirmPassword = document.getElementById('modalconfirmPassword').value;

		console.log(confirmPassword);
		if (password !== confirmPassword) {
	@* // Si las contraseñas no coinciden, muestra una alerta
				alert("Las contraseñas no coinciden. Por favor, asegúrate de ingresar la misma contraseña en ambos campos."); *@
				} else {
			var user = $('#CorreoPE').val();
	@* var mensajeError = document.getElementsByClassName("msnContraseña")[0];
				mensajeError.textContent = ""; *@
					if (password.length < 8) {
	@* mensajeError.textContent = "La contraseña debe tener al menos 8 caracteres, un valor alfanumérico y al menos 1 caracter en mayúsculas."; *@
					} else {
				var newPassword = confirmPassword;
				$.ajax({
					type: 'POST',
					url: '/Usuarios/ResetPassword',
					data: {
						emailUser: user,
						newPassword: password
					},
					success: function (result) {
						if (result) {
							Swal.fire({
								title: '¡Registro exitoso!',
								html: 'La contraseña se actualizó correctamente.',
								icon: 'success',
								confirmButtonText: "Ok",
								customClass: {
									confirmButton: 'button_confirmacion'
								}
							}).then(function () {
								location.reload();
							});
						} else {
							Swal.fire({
								icon: "error",
								title: "Ups...",
								text: "Hubo un problema intenta nuevamente",
							});
						}
					},
					error: function (xhr, textStatus, errorThrown) {
						// Manejar el resultado no exitoso aquí
						console.log('Error:', textStatus);
						console.log('Error lanzado:', errorThrown);
					}
				});
			}
		}
	});
</script>

<!--script para la animacion de la visivilidad de la contraseña en el modal*******************************************************************-->
<script>
	function togglePasswordVisibility1() {
		var passwordInput = document.getElementById("modalResetPassword");
		var passwordToggle = document.querySelector(".password-toggle1");
		if (passwordInput.type === "password") {
			passwordInput.type = "text";
			passwordToggle.innerHTML = '<i class="far fa-eye-slash"></i>'; // Cambia el icono a un ojo tachado
		} else {
			passwordInput.type = "password";
			passwordToggle.innerHTML = '<i class="far fa-eye"></i>'; // Cambia el icono a un ojo
		}
	}
	function togglePasswordVisibility2() {
		var passwordInput = document.getElementById("modalconfirmPassword");
		var passwordToggle = document.querySelector(".password-toggle2");
		if (passwordInput.type === "password") {
			passwordInput.type = "text";
			passwordToggle.innerHTML = '<i class="far fa-eye-slash"></i>'; // Cambia el icono a un ojo tachado
		} else {
			passwordInput.type = "password";
			passwordToggle.innerHTML = '<i class="far fa-eye"></i>'; // Cambia el icono a un ojo
		}
	}
</script>

<script src="~/js/modalFunciones.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"
		integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script src="~/assets/js/jquery-2.2.4.min.js" type="text/javascript"></script>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@* <script src="~/js/miPerfil.js"></script> *@
<script src="~/js/archivo.js"></script>
<script src="~/js/brokersScript.js"> </script>
<script src="~/js/miPerfil.js"></script>


<script>
	const inputElements = document.getElementsByClassName("input-fieldData");//obteniendo inputDatos
	// para los select de banco, lada, colonia
	const selectDatos = document.getElementsByClassName("selector-estilos");
	// console.log(selectDatos);
	const canvasButton = document.querySelector(".bottomBar");
	const aceptarButton = document.getElementById("aceptarButton");
	const cancelarButton = document.getElementById("cancelarButton");
	// variable para la foto
	const imagenPerfil = document.getElementById("preview");

	const checkboxes = document.querySelectorAll('input[type="checkbox"]');
	const facturacionCheckbox = document.querySelector('input[name="Facturacion"]');

	for (let i = 0; i < inputElements.length; i++) {
		inputElements[i].addEventListener("focus", function () {
			canvasButton.classList.remove("oculta");
			canvasButton.classList.add("mostrando");
		});
	}

	checkboxes.forEach(function (checkbox) {
		checkbox.addEventListener('change', function () {
			if (this.checked) {
				canvasButton.classList.remove("oculta");
				canvasButton.classList.add("mostrando");
			}
			if (!this.checked) {
				canvasButton.classList.remove("oculta");
				canvasButton.classList.add("mostrando");
			}
		});
	});

	facturacionCheckbox.addEventListener('change', function () {
		if (this.checked) {
			canvasButton.classList.remove("oculta");
			canvasButton.classList.add("mostrando");
		}
		if (!this.checked) {
			canvasButton.classList.remove("oculta");
			canvasButton.classList.add("mostrando");
		}
	});
	// ciclo para los select de los datos
	for (let i = 0; i < selectDatos.length; i++) {
		// Agregar un evento de clic a cada select
		selectDatos[i].addEventListener("click", function () {
			// Tu lógica para cambiar las clases de canvasButton
			canvasButton.classList.remove("oculta");
			canvasButton.classList.add("mostrando");
		});
	}

	aceptarButton.addEventListener("click", function () {
		canvasButton.classList.add("oculta");
		canvasButton.classList.remove("mostrando");
	});

	cancelarButton.addEventListener("click", function () {
		canvasButton.classList.add("oculta");
		canvasButton.classList.remove("mostrando");
	});

	// esta parte lanza la función cuando la imagen se ha cargado
	imagenPerfil.addEventListener("load", function () {
		// Aplicar el nuevo estilo a .elementoCambiarCSS
		canvasButton.classList.remove("oculta");
		canvasButton.classList.add("mostrando");
	});

</script>