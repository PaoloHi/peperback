@using Microsoft.AspNetCore.Identity



@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



@{
    var countA1 = 0;
    var idCarusel1 = "";
    var count1 = 0;


    var NP = Model.propiedadTarjeta;
    countA1 = countA1 + 1;
    idCarusel1 = "carouselExampleFade" + NP.IDPropiedadG;
    count1 = 0;



    var ListaImagenes = Model.propiedadTarjeta.ListaImagenesPropiedad;
}




<div class=" col mb-2">
    <div class="caja-a-propie mb-2 pb-2 mt-2 shadow position-relative ">


        <div class="col row d-flex ms-1 responsiveExtraSmall Fila1">
            <div class="col-5 mt-4 ms-1 px-0">

              
                <div id="@idCarusel1" class="carousel slide carousel-fade "
                     data-bs-ride="carousel">
                    <div class="carousel-inner">

                        @foreach (var Imagen in ListaImagenes)
                        {

                            var activa1 = count1 == 0 ? "carousel-item active" : "carousel-item";
                            <div class="@activa1">
                                <img class="image-contain carousel-adaptar lazy-load" src="@Imagen.txt64" loading="lazy" alt="Imagen de propiedad">
                            </div>
                            count1++;
                        }

                    </div>


                    <button class="carousel-control-prev" type="button"
                            data-bs-target="#@idCarusel1" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button"
                            data-bs-target="#@idCarusel1" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            @{

                var classAbrev = "";
                var medidaFinal = "";

                double superficie = Convert.ToDouble(@NP.Superficie);
                var superficieF = superficie.ToString("N0", new System.Globalization.CultureInfo("en-US"));

                double construccion = Convert.ToDouble(@NP.SuperficieC);
                var construccionF = construccion.ToString("N0", new System.Globalization.CultureInfo("en-US"));


                switch (@NP.Abrev)
                {
                    case "Depto.":
                        classAbrev = "title-cards-mp-depto ";
                        medidaFinal = construccionF;
                        break;
                    case "Bodega":
                        classAbrev = "title-cards-mp-bodega";
                        medidaFinal = construccionF;
                        break;
                    case "Casa":
                        classAbrev = "title-cards-mp-casa";
                        medidaFinal = construccionF;
                        break;
                    case "Edif.":
                        classAbrev = "title-cards-mp-edificio";
                        medidaFinal = construccionF;
                        break;
                    case "Huerta":
                        classAbrev = "title-cards-mp-huerta";
                        medidaFinal = construccionF;
                        break;
                    case "Local":
                        classAbrev = "title-cards-mp-local";
                        medidaFinal = construccionF;
                        break;
                    case "Nave":
                        classAbrev = "title-cards-mp-nave";
                        medidaFinal = construccionF;
                        break;
                    case "Ofic.":
                        classAbrev = "title-cards-mp-oficina";
                        medidaFinal = construccionF;
                        break;
                    case "Quinta":
                        classAbrev = "title-cards-mp-quinta";
                        medidaFinal = construccionF;
                        break;
                    case "Rancho":
                        classAbrev = "title-cards-mp-rancho";
                        medidaFinal = construccionF;
                        break;
                    case "Terreno":
                        classAbrev = "title-cards-mp-terreno";
                        medidaFinal = superficieF;
                        break;
                    case "Villa":
                        classAbrev = "title-cards-mp-villa";
                        medidaFinal = construccionF;
                        break;
                    case "Hosp.":
                        classAbrev = "title-cards-mp-hospital";
                        medidaFinal = construccionF;
                        break;
                    case "Esc.":
                        classAbrev = "title-cards-mp-escuela";
                        medidaFinal = construccionF;
                        break;
                    default:
                        classAbrev = "title-cards-mp-depto";
                        medidaFinal = construccionF;
                        break;
                }
            }
            @{
                var tipoOperacion = "";
                switch (NP.Operacion)
                {
                    case "Renta":
                        tipoOperacion = "operacionRenta";
                        break;
                    case "Venta":
                        tipoOperacion = "operacionVenta";
                        break;
                    default:
                        tipoOperacion = "title-cards-mp-depto";
                        break;
                }
            }

            <div class="d-inline-flex @tipoOperacion etiquetadoOperacion justify-content-between ">
                <p class="px-2 text-white m-auto txtOperacion">
                    @NP.Operacion
                </p>
            </div>
            <div class="col-6 text-cards ms-2 mt-2 position-relative bloqueTextCard ">
                <div class="d-inline-flex justify-content-between etiquetaTipo @classAbrev  ">
                    <h6 class=" size-mp-cards my-auto ms-1"> @NP.Abrev</h6>

                    @{
                        var umnp = "";
                        if (NP.UM == "m2")
                        {
                            umnp = "m²";
                        }
                        else
                        {
                            umnp = "ha";
                        }
                    }
                    <h6 class=" size-mp-cards me-1 my-auto">
                        <i class="fa-solid fa-maximize size-mp-cards  "></i> @medidaFinal @umnp
                    </h6>
                </div>
                <div class="mt-3 ">
                    <h6 class="fw-bold ms-2 text-orange longitudDePrecio " style="font-size:inherit;">
                        @{

                            string numero = @NP.Precio;
                            decimal valor = decimal.Parse(numero);

                            string precioTotalP;
                            if (valor % 1 == 0)
                            {
                                precioTotalP = valor.ToString("N0"); // Formato sin decimales ni separadores de miles
                            }
                            else
                            {
                                precioTotalP = valor.ToString("N2"); // Formato con dos decimales y separadores de miles
                            }

                        }

                        @precioTotalP @NP.ISO
                    </h6>
                </div>

                <div class="size-mp-name-main-house fw-bold ms-2  ">
                    <h6 class="size-mp-name-main-house fw-bold longitudDePrueba" style="width: 95%;">@NP.Titulo</h6>
                </div>

                <div class="size-mp-name-house fw-bold ms-2 " style="height:44px;">
                    <h6 class="size-mp-name-house longitudDePruebaD" style="width: 95%;">@NP.Direccion</h6>
                </div>

            </div>

        </div>
        <div class="row row-cols-1 mt-2 Fila2">
            <p class="mx-3 my-0">
                <i class="fa-solid fa-hashtag" style="color:darkorange;"></i>  @NP.IDPropiedadG
            </p>

            @if (SignInManager.IsSignedIn(User) && ((User.IsInRole("Ejecutivo comercial")) || (User.IsInRole("Mesa de control")) || (User.IsInRole("Contact Center")) || (User.IsInRole("Admin comercial")) || (User.IsInRole("Admin root"))))
            {
                <p class="mx-3 text-black longitudBroker"><b style="color:darkorange;">Broker: </b> @NP.NBroker </p>
            }

        </div>
        <div class="row row-cols-2  col align-items-center ms-3 Fila3">



            <div class="col-8 mt-3 d-inline-flex ps-0 ms-2">
                <h6 class="col-12 fw-bold size-text-publi w-auto ">Fecha programada:</h6>
                <h6 class="col-12   size-text-publi w-auto ms-2">@NP.fechaProgramada</h6>
            </div>



            <div class="col-1 d-flex ">

                <a class="style-vermas2" asp-controller="Propiedades" asp-action="EditarPropiedad" asp-route-PROPIEDADID=@NP.IDPropiedadG data-toggle="tooltip" data-placement="top" title="Editar">
                    <i class="fa-solid fa-pen-to-square "></i>
                </a>

            </div>

            <div class="col-1 d-flex ">
                <a class="style-vermas2 " asp-controller="Propiedades" asp-action="DetallesPropiedadNP" asp-route-PROPIEDADID=@NP.IDPropiedadG
                   data-toggle="tooltip" data-placement="top" title="Ver detalles">


                    <div class="position-relative">


                        <i class="fa-solid fa-eye"></i>

                        @if (NP.statusAprobacion == 1)
                        {

                            <div class="icon-container ">
                                <i class="fa-solid fa-triangle-exclamation"></i>
                            </div>

                        }
                    </div>

                </a>

            </div>


        </div>

    </div>
</div>